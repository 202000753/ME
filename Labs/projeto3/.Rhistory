(elx <- mean(dfMain$year_born))
r <- 1  # estimou-se um parâmetro
(gl <- k1-1-r)  # graus de liberdade da distribuição Qui-Quadrado
# probabilidades necessárias para as frequências esperadas
(pi =pnorm(cortes[2:(k1+1)],1/elx))
for(i in 2:k1){
pi[i] <- pnorm(cortes[i+1],1/elx)-pnorm(cortes[i],1/elx)
}
pi[k1] <- 1-pnorm(cortes[k1],1/elx)
pi
sum(pi)
#teste de ajustamento do Qui-Quadrado -> neste caso todos os resultados NÃO estão certos pois r=1
chisq.test(Oi,p=pi)
# os graus de liberdade e o valor-p estão errados pois não tem em consideração
# que os parâmetros tiveram de ser estimados (r=1)
testdata.1 <- chisq.test(Oi,p=pi)
testdata.1$statistic # Qobs
testdata.1$parameter # graus de liberdade -> errado
testdata.1$p.value  # valor-p -> errado
testdata.1$observed  # Oi
testdata.1$expected # Ei=npi
# valor-p correto
valorp <- 1-pchisq(testdata.1$statistic[[1]],gl)
valorp
############################
# verificar as regras recomendadas
data.frame(O=testdata.1$observed,
E=testdata.1$expected,
row.names = NULL)
n1
# dimensão da amostra maior que 30
if(n1>30){
print("respeita a regra")
}else{
print("a amostra é pequena")
}
# todas as frequências Esperadas >= 1
if(length(which(testdata.1$expected<1))>0){
print("juntar linhas da tabela de frequências")
}else{
print("respeita a regra")
}
# não há mais de 20% das frequências Esperadas < 17
if(length(which(testdata.1$expected<17))>(k1*0.0588)){
print("juntar linhas da tabela de frequências")
}else{
print("respeita a regra")
}
# juntar linhas, as quatro últimas linhas (são as que têm as frequências que não respeitam uma das regras)
# perde 15 linhas
k2 <- k1-15
(gl2 <- k2-1-r)
#limites das classes
(cortes2<- c(cortes[1:k2],cortes[k1+1]))
#definir as classes -> cut()
(classes2 <- cut(dfMain$year_born, breaks=cortes2, right=TRUE,
include.lowest=TRUE, dig.lab = 5))
# frequências absolutas = frequências Observadas
(Oi2<-table(classes2))
# probabilidades necessárias para as frequências esperadas
# probabilidades necessárias para as frequências esperadas
(pi2 =pnorm(cortes2[2:(k2+1)],1/elx))
for(i in 2:k2){
pi2[i] <- pnorm(cortes2[i+1],1/elx)-pnorm(cortes2[i],1/elx)
}
pi2[k2] <- 1-pnorm(cortes2[k2],1/elx)
pi2
sum(pi2)
#teste de ajustamento do Qui-Quadrado -> neste caso todos os resultados NÃO estão certos pois r=1
chisq.test(Oi2,p=pi2)
# os graus de liberdade e o valor-p estão errados pois não tem em consideração
# que os parâmetros tiveram de ser estimados (r=1)
datatest.2 <- chisq.test(Oi2,p=pi2)
datatest.2$statistic # Qobs
datatest.2$parameter # graus de liberdade -> errado
datatest.2$p.value  # valor-p -> errado
datatest.2$observed  # Oi
datatest.2$expected # Ei=npi
# valor-p correto
valorp2 <- 1-pchisq(datatest.2$statistic[[1]],gl2)
valorp2
############################
# verificar as regras recomendadas
data.frame(O=datatest.2$observed,
E=datatest.2$expected,
row.names = NULL)
# não há mais de 20% das frequências Esperadas < 5
if(length(which(datatest.2$expected<5))>(k2*0.2)){
print("juntar linhas da tabela de frequências")
}else{
print("respeita a regra")
}
#################
#tabela que estamos a comparar
data.frame(O=datatest.2$observed,
E=datatest.2$expected,
row.names = NULL)
#graficamente o que estamos a comparar
hist(dfMain$year_born, breaks=cortes2, freq=FALSE, col="red", main="",xaxt="n")  # histograma dos dados observados
axis(side=1, at=cortes2)
curve(dnorm(x, rate=1/elx), from=min(dfMain$year_born), col="green",lwd=4, add=TRUE) # função densidade de probabilidade da distribuição normal
legend("topright",
legend=c("observado", "esperado"),
fill=c("red", NA),
border=c("black",NA),
lty=c(NA,1),lwd=c(NA,4),
col=c(NA, "green"),
x.intersp = c(0.01,1))
############################
#####################
# tomar uma decisão #
#####################
alpha <- 0.10
valorp2 #0
# a partir do valor-p NÂO se Rejeita H0
# pois Rejeita-se H0 se alpha >= valor_p
##################################################################################################
##                                                                                              ##
##                   CHARACTERIZATION OF THE SELECTED VARIABLES                                 ##
##                                                                                              ##
##################################################################################################
########################################VARIABLE company_size#####################################
##REMOVE VALUE 0 , SO IT WONT LEAD TO WRONG CONCLUSIONS
temp<-dfMain$company_size[which(dfMain$company_size<99)]
temp2 <- as.numeric(temp)
dfCompany_size<-temp2[which(temp2!=0)]
## SEE NEW DATA
summary(dfCompany_size)
unique(dfCompany_size)
#FREQUENCY TABLE(TABELA DE FREQUENCIAS)
(ni2 <- table(dfCompany_size))#frequências absolutas
(xi2 <- rownames(ni2))#níveis da variável
(n2 <- length(dfCompany_size))#n = dimensão da amostra
(fi2 <- ni2/n2)#frequências relativas
(Ni2 <- cumsum(ni2))# frequências absolutas acumuladas
(Fi2 <- cumsum(fi2))#frequências relativas acumuladas
# tabela de frequências como uma data.frame
(tab.freq2 <- data.frame(i=1:nrow(ni),       # número da linha
xi =xi,             # níveis da variável
ni=as.integer(ni),  # frequências absolutas
fi=as.numeric(fi),  # frequências relativas
Ni=as.integer(Ni),  # frequências absolutas acumuladas
Fi=as.numeric(Fi))) # frequências relativas acumuladas
#GRAPHIC REPRESENTATION(REPRESENTAÇÃO GRÁFICA DOS DADOS)
# Gráfico de Barras
barplot(ni, names.arg=xi, ylim=c(0,30000),
ylab="FREQUENCIAS ABSOLUTAS", xlab="NR DE EMPREGADOS/TAMANHO DA EMPRESA",
main="Tamanho da Empresa",
col=c("blue"))
box(bty = "L")
# Gráfico Circular
pie(ni, labels=paste(xi,("->"),round(fi*100), "%"),
col=c("red", "yellow", "blue", "green"),
main="Gráfico Circular: TAMANHO DA EMPRESA")
legend("topleft", legend=c(xi),
fill=c("red", "yellow", "blue", "green"), cex = 0.75)
## Caixa de Bigodes
boxplot(dfCompany_size, range=1.5, col = 3)
#NUMERICAL LOCATION AND DISPERSION INDICATORS(INDICADORES NUMÉRICOS DE LOCALIZAÇÃO E DISPERSÃO)
# medidas de localização central: média, mediana e moda
#MODA
tab.freq[which(tab.freq$ni==max(tab.freq$ni)),2]
mean(dfCompany_size)#MEDIA
median(dfCompany_size)#MEDIANA
#medidas de localizacao não central: Quantis (Quartis e Decis)
quantile(dfCompany_size, c(0.25,0.50,0.75))#QUARTIS
quantile(dfCompany_size, probs = seq(.1, .9, by = .1))#DECIS
# medidas de dispersão: variância, desvio padrão, amplitude total, amplitude interquartil
var(dfCompany_size) #VARIÂNCIA
sd(dfCompany_size) #DESVIO PADRÃO
(A = max(dfCompany_size)-min(dfCompany_size))#AMPLITUDE TOTAL
(AIQ = IQR(dfCompany_size))#AMPLITUDE INTERQUARTIL
##ASSIMETRIA
skewness(dfCompany_size,type=3)
##Assimetria positiva dado que b1>0
## Curtose
kurtosis(dfCompany_size,type = 3)
## curva leptocúrtica, alongada dado que b2>0
########################################VARIABLE year_born########################################
##CHARACTERIZATION OF VARIABLE year_born has been done previously
#######################################################
#######################################################
##                Regressão Linear
# variáveis:
# X - company_size
# Y - year_born
(amostra <- data.frame(x=dfMain$company_size,
y=dfMain$year_born))
##################################################
# analisar a relação linear entre as variáveis:
# diagrama de dispersão -> plot()
# coeficiente de correlação linear de Pearson -> cor()
##################################################
plot(x=amostra$x, y=amostra$y,
pch=20,
xlab="Tamanho da empresa",
ylab="Ano de nascimento",
main="Diagrama de Dispersão")
##################################################
# coeficiente de correlação linear de Pearson -> cor()
cor(x=amostra$x, y=amostra$y)
##Este foi o valor (0.5082532) mais elevado de coeficiente de correlação linear de Pearson(não é apropriado o modelo)
##########################################################################################
##################################################
# pela análise do diagrama de dispersão não se vê-se uma relação linear entre as variáveis
# pois não é possível imaginar uma reta nem com declive negativo nem com declive positivo a passar pela nuvem de pontos
# rxy= 0.5082532  -> o coeficiente confirma o que vimos no diagrama de dispersão, a correlação linear é muito fraca,
# não se encontra entre -1<rxy<-0.8 nem entre 0.8<rxy<1.
# Seria a melhor opção abandonar este modelo, contudo no âmbito deste trabalho vamos mantê-lo
###########################################################################################
###########################################################################################
# reta de regressão linear  -> lm()
# variável independente -> company_size = X
# variável dependente -> year_born = Y
# modelo pretendido é y^=a+bx
# formula:  y~x
(modelo <- lm(formula = y~x, data=amostra))
modelo$coefficients
(a1 <- modelo$coefficients[[1]])
(b1 <- modelo$coefficients[[2]])
# ver a reta y^=a+bx no diagrama de dispersão
plot(x=amostra$x, y=amostra$y,
pch=20, col="blue",
xlab="Tamanho da companhia",
ylab="Ano de Nascimento",
main="Diagrama de Dispersão")
abline(a=a1,b=b1, col="red")
##################################################
##################################################
# resíduos
modelo$residuals
# ou
# resíduos = valores observados - valores estimados = y -y^
# valores observados:
amostra$y
# valores estimados
modelo$fitted.values
# resíduos
(residuos <- amostra$y - modelo$fitted.values)
# gráfio dos resíduos
# na regressão linear simples é indiferente fazer a análise dos resíduos
# com o diagrama de dispersão entre a variável x e os resíduous
# ou
# com o diagrama de dispersão entre os valores estimados do y (y^) e os resíduous
# os gráficos não são iguais mas as conclusões são equivalentes
# gráfico dos resíduos -> (x,e)
plot(x=amostra$x, y=modelo$residuals,
xlab="Tamanho da Companhia",
ylab="resíduos",
main="Gráfico dos resíduos")
abline(h=0, col="red")
#######################################################################################
#######################################################################################
#             teste de ajustamento de Kolmogorov-Smirnov para a regressão linear
#######################################################################################
#######################################################################################
##################################################################################################
##                                                                                              ##
##                   CHARACTERIZATION OF THE SELECTED VARIABLES                                 ##
##                                                                                              ##
##################################################################################################
########################################VARIABLE year#############################################
#FREQUENCY TABLE(TABELA DE FREQUENCIAS)
(ni <- table(dfMain$year)) #frequências absolutas
(xi <- rownames(ni)) #níveis da variável
(n <- sum(ni))#n = dimensão da amostra
(fi <- ni/n)#frequências relativas
(Ni <- cumsum(ni))# frequências absolutas acumuladas
(Fi <- cumsum(fi))#frequências relativas acumuladas
# tabela de frequências como uma data.frame
# usar as funções: as.integer() e as.numeric()
# para os elementos deixarem de ser do tipo "table" e passarem a ser números
(tab.freq <- data.frame(i=1:nrow(ni),       # número da linha
xi =xi,             # níveis da variável
ni=as.integer(ni),  # frequências absolutas
fi=as.numeric(fi),  # frequências relativas
Ni=as.integer(Ni),  # frequências absolutas acumuladas
Fi=as.numeric(Fi))) # frequências relativas acumuladas
#GRAPHIC REPRESENTATION(REPRESENTAÇÃO GRÁFICA DOS DADOS)
colours<-rainbow(14) # Cria 14 cores diferentes para serem utilizadas nas representações gráficas
# Gráfico de Barras
barplot(ni, names.arg=xi, ylim=c(0,8000),
ylab="Frequências Absolutas", xlab="Ano do Estudo",
main="Gráfico de Barras:
Ano em que o estudo foi conduzido",
col=colours)
box(bty = "L")
boxplot(dfMain$year, range=1.5, col=14)
# Gráfico Circular
pie(ni, labels=paste(xi,"-",round(fi*100), "%"),
col=colours,
main="Gráfico Circular: Ano do Estudo")
legend("topleft", legend=c(xi),
fill=colours, cex = 0.55)
#NUMERICAL LOCATION AND DISPERSION INDICATORS(INDICADORES NUMÉRICOS DE LOCALIZAÇÃO E DISPERSÃO)
# medidas de localização central: média, mediana e moda
#MODA
if( range(table(dfMain$year))[1]==range(table(dfMain$year))[2]){
print("amodal")
} else{
print(paste("Moda:",DescTools::Mode(dfMain$year)))
}
mean(dfMain$year)#MEDIA
median(dfMain$year)#MEDIANA
#medidas de localizacao não central: Quantis (Quartis e Decis)
quantile(dfMain$year, c(0.25,0.50,0.75))#QUARTIS
quantile(dfMain$year, probs = seq(.1, .9, by = .1))#DECIS
# medidas de dispersão: variância, desvio padrão, amplitude total, amplitude interquartil
var(dfMain$year) #VARIÂNCIA
sd(dfMain$year) #DESVIO PADRÃO
(A = max(dfMain$year)-min(dfMain$year))#AMPLITUDE TOTAL
(AIQ = IQR(dfMain$year))#AMPLITUDE INTERQUARTIL
##Assimetria
library(e1071)
skewness(dfMain$year,type=3)
##Assimetria Negativa* dado que b1<0 (-0.03954851)
## Curtose
kurtosis(dfMain$year,type = 3)
## Curva Platicúrtica* ou achatada dado que b2<0 (-1.182807)
########################################VARIABLE family_member####################################
range(dfMain$family_member)
#FREQUENCY TABLE(TABELA DE FREQUENCIAS)
(ni <- table(dfMain$family_member)) #frequências absolutas
(xi <- rownames(ni)) #níveis da variável
(n <- sum(ni))#n = dimensão da amostra
(fi <- ni/n)#frequências relativas
(Ni <- cumsum(ni))# frequências absolutas acumuladas
(Fi <- cumsum(fi))#frequências relativas acumuladas
# tabela de frequências como uma data.frame
# usar as funções: as.integer() e as.numeric()
# para os elementos deixarem de ser do tipo "table" e passarem a ser números
(tab.freq <- data.frame(i=1:nrow(ni),       # número da linha
xi =xi,             # níveis da variável
ni=as.integer(ni),  # frequências absolutas
fi=as.numeric(fi),  # frequências relativas
Ni=as.integer(Ni),  # frequências absolutas acumuladas
Fi=as.numeric(Fi))) # frequências relativas acumuladas
#GRAPHIC REPRESENTATION(REPRESENTAÇÃO GRÁFICA DOS DADOS)
colours<-rainbow(9) # Cria 9 cores diferentes para serem utilizadas nas representações gráficas
# Gráfico de Barras
barplot(ni, names.arg=xi, ylim=c(0,30000),
ylab="Frequências Absolutas", xlab="Numero de Elementos da Familia",
main="Gráfico de Barras:
Extensão do Agregado familiar",
col=colours)
box(bty = "L")
boxplot(dfMain$family_member, range=1.5)
# Gráfico Circular
pie(ni, labels=paste(xi, "Elementos - ", round(fi*100), "%"),
col=colours,
main="Gráfico Circular: Agregado Familiar")
legend("bottomleft", legend=c(xi),
fill=colours, cex = 0.75)
#NUMERICAL LOCATION AND DISPERSION INDICATORS(INDICADORES NUMÉRICOS DE LOCALIZAÇÃO E DISPERSÃO)
# medidas de localização central: média, mediana e moda
#MODA
if( range(table(dfMain$family_member))[1]==range(table(dfMain$family_member))[2]){
print("amodal")
} else{
print(paste("Moda:",DescTools::Mode(dfMain$family_member)))
}
mean(dfMain$family_member)#MEDIA
median(dfMain$family_member)#MEDIANA
#medidas de localizacao não central: Quantis (Quartis e Decis)
quantile(dfMain$family_member, c(0.25,0.50,0.75))#QUARTIS
quantile(dfMain$family_member, probs = seq(.1, .9, by = .1))#DECIS
# medidas de dispersão: variância, desvio padrão, amplitude total, amplitude interquartil
var(dfMain$family_member) #VARIÂNCIA
sd(dfMain$family_member) #DESVIO PADRÃO
(A = max(dfMain$family_member)-min(dfMain$family_member))#AMPLITUDE TOTAL
(AIQ = IQR(dfMain$family_member))#AMPLITUDE INTERQUARTIL
skewness(dfMain$family_member,type=3)
##Assimetria Positica dado que b1>0 (0.6395767)
## Curtose
kurtosis(dfMain$family_member,type = 3)
##  curva platic´urtica, achatada dado que b2<0 (-0.2621798)
#######################################################################################
#######################################################################################
#             teste de independencia Qui-Quadrado family_member/year
#######################################################################################
#######################################################################################
(histCortes <- cortes)
hist(dfMain$year_born, breaks=histCortes,
main="Histograma do ano de nascimento",
xlab="Ano de nascimento",
ylab="Frequências absolutas",
col="gold",
xlim=c(1900,2010),
ylim=c(0,15000))
chisq.test(Oi,p=pi)
testdata.1 <- chisq.test(Oi,p=pi)
testdata.1$statistic # Qobs
testdata.1$parameter # graus de liberdade -> errado
testdata.1$p.value  # valor-p -> errado
testdata.1$observed  # Oi
testdata.1$expected # Ei=npi
valorp <- 1-pchisq(testdata.1$statistic[[1]],gl)
valorp
data.frame(O=testdata.1$observed,
E=testdata.1$expected,
row.names = NULL)
n1
testdata.1 <- chisq.test(Oi,p=pi)
testdata.1$statistic # Qobs
testdata.1$parameter # graus de liberdade -> errado
testdata.1$p.value  # valor-p -> errado
testdata.1$observed  # Oi
testdata.1$expected # Ei=npi
data.frame(O=testdata.1$observed,
E=testdata.1$expected,
row.names = NULL)
valorp2 <- 1-pchisq(datatest.2$statistic[[1]],gl2)
valorp2
# verificar as regras recomendadas
data.frame(O=testdata.1$observed,
E=testdata.1$expected,
row.names = NULL)
n1
# dimensão da amostra maior que 30
if(n1>30){
print("respeita a regra")
}else{
print("a amostra é pequena")
}
# todas as frequências Esperadas >= 1
if(length(which(testdata.1$expected<1))>0){
print("juntar linhas da tabela de frequências")
}else{
print("respeita a regra")
}
# não há mais de 20% das frequências Esperadas < 17
if(length(which(testdata.1$expected<17))>(k1*0.0588)){
print("juntar linhas da tabela de frequências")
}else{
print("respeita a regra")
}
# juntar linhas, as quatro últimas linhas (são as que têm as frequências que não respeitam uma das regras)
# perde 15 linhas
k2 <- k1-15
(gl2 <- k2-1-r)
#limites das classes
(cortes2<- c(cortes[1:k2],cortes[k1+1]))
#definir as classes -> cut()
(classes2 <- cut(dfMain$year_born, breaks=cortes2, right=TRUE,
include.lowest=TRUE, dig.lab = 5))
# frequências absolutas = frequências Observadas
(Oi2<-table(classes2))
# probabilidades necessárias para as frequências esperadas
# probabilidades necessárias para as frequências esperadas
(pi2 =pnorm(cortes2[2:(k2+1)],1/elx))
for(i in 2:k2){
pi2[i] <- pnorm(cortes2[i+1],1/elx)-pnorm(cortes2[i],1/elx)
}
pi2[k2] <- 1-pnorm(cortes2[k2],1/elx)
pi2
sum(pi2)
#teste de ajustamento do Qui-Quadrado -> neste caso todos os resultados NÃO estão certos pois r=1
chisq.test(Oi2,p=pi2)
# os graus de liberdade e o valor-p estão errados pois não tem em consideração
# que os parâmetros tiveram de ser estimados (r=1)
datatest.2 <- chisq.test(Oi2,p=pi2)
datatest.2$statistic # Qobs
datatest.2$parameter # graus de liberdade -> errado
datatest.2$p.value  # valor-p -> errado
datatest.2$observed  # Oi
datatest.2$expected # Ei=npi
# valor-p correto
valorp2 <- 1-pchisq(datatest.2$statistic[[1]],gl2)
valorp2
############################
# verificar as regras recomendadas
data.frame(O=datatest.2$observed,
E=datatest.2$expected,
row.names = NULL)
# não há mais de 20% das frequências Esperadas < 5
if(length(which(datatest.2$expected<5))>(k2*0.2)){
print("juntar linhas da tabela de frequências")
}else{
print("respeita a regra")
}
#################
#tabela que estamos a comparar
data.frame(O=datatest.2$observed,
E=datatest.2$expected,
row.names = NULL)
#graficamente o que estamos a comparar
hist(dfMain$year_born, breaks=cortes2, freq=FALSE, col="red", main="",xaxt="n")  # histograma dos dados observados
axis(side=1, at=cortes2)
curve(dnorm(x, rate=1/elx), from=min(dfMain$year_born), col="green",lwd=4, add=TRUE) # função densidade de probabilidade da distribuição normal
legend("topright",
legend=c("observado", "esperado"),
fill=c("red", NA),
border=c("black",NA),
lty=c(NA,1),lwd=c(NA,4),
col=c(NA, "green"),
x.intersp = c(0.01,1))
############################
#####################
# tomar uma decisão #
#####################
alpha <- 0.10
valorp2 #0
testdata.1$statistic # Qobs
testdata.1$parameter # graus de liberdade -> errado
testdata.1$p.value  # valor-p -> errado
testdata.1$observed  # Oi
testdata.1$expected # Ei=npi
datatest.2$statistic # Qobs
datatest.2$parameter # graus de liberdade -> errado
datatest.2$p.value  # valor-p -> errado
datatest.2$observed  # Oi
datatest.2$expected # Ei=npi
